version: '3.8'

services:
  test:
    container_name: api_test
    image: test
    build: 
      context: ./test
    env_file:
      - .env
    ports: 
      - 3000:3000
    expose:
      - 3000
    networks:
      - api_network
    depends_on:
      - api
  api:
    container_name: api
    image: api
    build: 
      context: ./app
    env_file:
      - .env
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; uvicorn main:app --host 0.0.0.0'
    ports:
      - 8000:8000
    depends_on:
      - db
    networks:
      - api_network

  db:
    image: postgres:15.1-alpine
    container_name: database
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/
    volumes:
      - pg_project:/var/lib/postgresql/data/
    expose:
      - 5432
    ports:
      - 5432:5432
    networks:
      - api_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  api_network:

volumes:
  pg_project:
